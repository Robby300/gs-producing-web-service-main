version: "3.4"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - cloud
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - cloud
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


#  app:
##    container_name: producing-web-service
#    build:
#      context: ..
#      dockerfile: Dockerfile
#    image:  producing-web-service:0.0.1-SNAPSHOT
##    image:  web-service-image
#    networks:
#      - cloud
##    ports:
##      - ${PORT}:8081
#    depends_on:
#      - db
#      - kafka
#      - eureka
#    deploy:
#      resources:
#        limits:
#          memory: 512M
#        reservations:
#          memory: 512M
#    environment:
##      - EUREKA_HOST=http://eureka:8761/eureka/
#      - SPRING_APPLICATION_NAME=employee
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
#      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
#      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
#      - SPRING_FLYWAY_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
#      - SPRING_FLYWAY_USER=${POSTGRES_USER}
#      - SPRING_FLYWAY_PASSWORD=${POSTGRES_PASSWORD}
#      - KAFKA_BOOTSTRAP-SERVER=kafka:9092
##      - SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS=kafka:9092
##      - SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS=kafka:9092

  db:
    image: postgres:latest
    container_name: postgres
    networks:
      - cloud
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

#  eureka:
#    image: springcloud/eureka:latest
#    container_name: eureka
#    networks:
#    - cloud
#    ports:
#      - "8761:8761"
#    environment:
#      - EUREKA_HOST=http://eureka:8761/eureka/
#      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
#      - EUREKA_CLIENT_FETCH=false
#      - SERVER_PORT=8761


networks:
  cloud:
    external: true
