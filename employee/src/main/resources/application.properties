spring.application.name=employee

server.port=8081
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://postgres:5432/robdb
spring.datasource.username=rob
spring.datasource.password=isa_3812

spring.jpa.properties.hibernate.default_schema=employee_db
spring.jpa.show-sql=true

scheduler.cron=0 0 1 1 * *

spring.flyway.driver-class-name=org.postgresql.Driver
spring.flyway.url=jdbc:postgresql://postgres:5432/robdb
spring.flyway.user=rob
spring.flyway.password=isa_3812
spring.flyway.schemas=employee_db
spring.flyway.baseline-on-migrate = true

spring.main.allow-circular-references = true

topic.save=saveAll

spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP-SERVER:localhost:29092}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=com.example.producingwebservice.support.EmployeeDeserializer

spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP-SERVER:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.example.producingwebservice.support.EmployeeSerializer

secret=firstSecret

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_HOST:http://localhost:8761/eureka/}
eureka.instance.instance-id=employee-${random.uuid}
